CREATE TABLE USERTABLE
(
    EIDNUMBER NUMBER NOT NULL,
    FIRSTNAME VARCHAR2(36) NOT NULL,
    LASTNAME VARCHAR2(36) NOT NULL,
    USERNAME VARCHAR2(36) NOT NULL,
    PASSWORD1 VARCHAR2(36) NOT NULL,
    EMAIL VARCHAR2(36) NOT NULL,
    USERTYPE NUMBER NOT NULL,
    CONSTRAINT PK_EID PRIMARY KEY (EIDNUMBER)
);

select * from usertable;

CREATE TABLE APPLICANT(
    AIDNUMBER NUMBER NOT NULL,
    FIRSTNAME VARCHAR2(36) NOT NULL,
    LASTNAME VARCHAR2(36) NOT NULL,
    LOCALE VARCHAR2(50) NOT NULL,
    DESCRIPT VARCHAR2(250) NOT NULL,
    AMOUNT NUMBER NOT NULL,
    APPDATE VARCHAR(50),
    EVENTTYPE VARCHAR(250),
    EVENTTIME VARCHAR2(50) NOT NULL,
    GRADEFORMAT VARCHAR2(250) NOT NULL,
    GRADE VARCHAR2(20) NOT NULL,
     APPROVALLEVEL NUMBER NOT NULL,
     STATUS VARCHAR2(20) NOT NULL,
     REASON VARCHAR2(250) NOT NULL,
    EIDNUMBER NUMBER NOT NULL,
    CONSTRAINT PK_APPLICANT PRIMARY KEY (AIDNUMBER)
);

drop table applicant; 

SELECT TO_CHAR(SYSDATE, 'MM-DD-YYYY') FROM dual;


CREATE SEQUENCE USERSEQ
MINVALUE 10001
MAXVALUE 99999
START WITH 10001
INCREMENT BY 1
CACHE 20;

CREATE SEQUENCE APPLICANTSEQ
MINVALUE 1001
MAXVALUE 9999
START WITH 1001
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE PROCEDURE INSERTUSER(FIRSTNAME IN VARCHAR2, LASTNAME IN VARCHAR2, USERNAME IN VARCHAR2, PASSWORD1 IN VARCHAR2,   
EMAIL IN VARCHAR2, USERTYPE IN NUMBER)
AS
BEGIN
INSERT INTO USERTABLE VALUES(USERSEQ.NEXTVAL, FIRSTNAME, LASTNAME, USERNAME, PASSWORD1, EMAIL, USERTYPE);
COMMIT;
END;
/

CALL INSERTUSER('pedro', 'pedro', 'pedro','pedro', 'pedro@gmail.com', 3);

CALL CREATEAPPLICATION('luis', 'calderon', 'duval', 'house', 22.30, 'university', 'tuesday', 'yomama', 'doubled', 2, 'pending', 'isayso', 70112);
CALL CREATEAPPLICATION('kell', 'barrientos', 'duval', 'house', 22.30, 'university', 'tuesday', 'yomama', 'doubled', 2, 'pending', 'isayso', 70112);
CALL CREATEAPPLICATION('marcos', 'vallejos', 'duval', 'house', 22.30, 'university', 'tuesday', 'yomama', 'doubled', 2, 'pending', 'isayso', 70112);



select * from applicant;


CREATE OR REPLACE PROCEDURE CREATEAPPLICATION(FIRSTNAME IN VARCHAR2, LASTNAME IN VARCHAR2, LOCALE IN VARCHAR2, DESCRIPT IN VARCHAR2, AMOUNT IN FLOAT, EVENTTYPE IN VARCHAR2, 
EVENTTIME VARCHAR2, GRADEFORMAT IN VARCHAR2, GRADE IN VARCHAR2, APPROVALLEVEL IN NUMBER, STATUS IN VARCHAR2, REASON IN VARCHAR2, EIDNUM IN NUMBER)
AS
BEGIN
INSERT INTO APPLICANT VALUES(APPLICANTSEQ.NEXTVAL, FIRSTNAME, LASTNAME, LOCALE, DESCRIPT, AMOUNT, TO_CHAR(SYSDATE, 'MM-DD-YYYY'), EVENTTYPE, EVENTTIME, GRADEFORMAT, GRADE, APPROVALLEVEL, STATUS, REASON, EIDNUM);
COMMIT;
END;
/

--procedure to update pending by 
CREATE OR REPLACE PROCEDURE UPDATEREQUEST(APPLID IN NUMBER)
AS 
BEGIN 
    UPDATE APPLICANT SET APPROVALLEVEL = 1 WHERE AIDNUMBER = APPLID; 
COMMIT; 
END;
/
--procedure to update pending by department head
CREATE OR REPLACE PROCEDURE UPDATEREQUESTBYDH(APPLID IN NUMBER)
AS 
BEGIN 
    UPDATE APPLICANT SET APPROVALLEVEL = 2 WHERE AIDNUMBER = APPLID; 
COMMIT; 
END;
/

--procedure to update pending by Benco IF
CREATE OR REPLACE PROCEDURE UPDATEREQUESTBYBC(APPLID IN NUMBER, RCHANGE IN NUMBER)
AS 
BEGIN 
    UPDATE APPLICANT SET APPROVALLEVEL = 3, STATUS = 'approved', AMOUNT = RCHANGE WHERE AIDNUMBER = APPLID; 
COMMIT; 
END;
/

--procedure to update pending by Benco
CREATE OR REPLACE PROCEDURE UPDATEREQUESTBYB(APPLID IN NUMBER)
AS 
BEGIN 
    UPDATE APPLICANT SET APPROVALLEVEL = 3, STATUS = 'approved' WHERE AIDNUMBER = APPLID; 
COMMIT; 
END;
/

UPDATE APPLICANT SET approvallevel = 3 WHERE AIDNUMBER = 1041;


--procedure to deny request
CREATE OR REPLACE PROCEDURE DENYREQUEST(APPLID IN NUMBER)
AS 
BEGIN 
UPDATE APPLICANT SET STATUS = 'denied' WHERE AIDNUMBER = APPLID;
COMMIT; 
END; 
/

--procedure to add a reason
CREATE OR REPLACE PROCEDURE ADDREASON(APPLID IN NUMBER, REA IN VARCHAR2)
AS 
BEGIN 
UPDATE APPLICANT SET REASON = REA WHERE AIDNUMBER = APPLID;
COMMIT; 
END; 
/


CREATE TABLE REGISTRATIONTRACKER
(
    REGID NUMBER NOT NULL,
    EIDNUMBER NUMBER NOT NULL,
    AIDNUMBER NUMBER NOT NULL,
    ACTION VARCHAR2(36) NOT NULL,
    TIME TIMESTAMP NOT NULL,
    
    CONSTRAINT PK_LOG PRIMARY KEY (REGID)
);

CREATE TABLE GRADINGFORMAT(
        GRADINGID NUMBER NOT NULL,
        GFORMAT VARCHAR(250) NOT NULL,
        CONSTRAINT PK_G_FORMATS PRIMARY KEY (GRADINGID)
);

INSERT INTO GRADINGFORMATS VALUES(1,'PRESENT TO MANAGEMENT');
INSERT INTO GRADINGFORMATS VALUES(2,'DEFAULT GRADE OF 80');
INSERT INTO GRADINGFORMATS VALUES(3,'OTHER');

select * from USERTABLE;
select * from APPLICANT;

SELECT * FROM APPLICANT WHERE STATUS = 'resolved';

UPDATE APPLICANT  SET STATUS = 'resolved' WHERE EIDNUMBER = 10175;
UPDATE APPLICANT  SET STATUS = 'resolved' WHERE EIDNUMBER = 10176;

DROP TABLE APPLICANT;
DROP TABLE USERtABLE;

SELECT FIRSTNAME FROM USERTABLE WHERE USERNAME ='USERNAME' AND PASSWORD1='PASSWORD';